@startuml

TaggableObject <|- Note
Event -|> TaggableObject

TaggableObject }o== Tag

TagManager }o== TaggableObject
TagManager -> Tag

class TagManager {
-Map<Tag, ArrayList<TaggableObject>>
+createTag(Tag, boolean): boolean
+createTag(ArrayList<Tag>, String, String): ArrayList<String>
+tagNote(TaggableObject, Tag): void
+removeTag(TaggableObject, Tag): void
+deleteTag(Tag tag): boolean
+deleteTag(ArrayList<Tag>, String, String): ArrayList<String>
+getAllTagsName(): ArrayList<String>
+rebindTags(TaggableObject): void
+tagAndUntag(TaggableObject, ArrayList<Tag>, String, String): ArrayList<String>
}

abstract class TaggableObject {
-ArrayList<Tag>
+getTagsName(): String
}

class Tag {
-name
-attribute
+Tag(String, String)
+Tag(String, int)
+setTagColor(String): void
+toSaveString(): String
}

@enduml