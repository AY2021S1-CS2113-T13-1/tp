@startuml
box "Parser" #LightBlue

activate Notus #DarkSalmon
Notus -> ParserManager: parseCommand()

create ParseAddNoteCommand
ParserManager -> ParseAddNoteCommand: <<create>>

activate ParseAddNoteCommand #DarkSalmon
ParseAddNoteCommand --> ParserManager
deactivate ParseAddNoteCommand

ParserManager -> ParseAddNoteCommand: parse()
activate ParseAddNoteCommand #DarkSalmon
ParseAddNoteCommand -> ParseAddNoteCommand: splitInfoDetails(String)

loop infoDetails in splitInfo

alt /t
ParseAddNoteCommand -> ParseAddNoteCommand: checkBlank()

else /tag
ParseAddNoteCommand -> ParseAddNoteCommand: handleTagPrefix(String)

else /pin
ParseAddNoteCommand -> ParseAddNoteCommand: checkBlank()

else /archive
ParseAddNoteCommand -> ParseAddNoteCommand: checkBlank()

end
end

create AddNoteCommand
ParseAddNoteCommand -> AddNoteCommand: <<create>>

activate AddNoteCommand #DarkSalmon
AddNoteCommand --> Notus
deactivate AddNoteCommand

deactivate ParseAddNoteCommand

destroy ParseAddNoteCommand

Notus -> AddNoteCommand: setData()

activate AddNoteCommand #DarkSalmon
AddNoteCommand --> Notus
deactivate AddNoteCommand

Notus -> Notus: executeCommand()
activate Notus #DarkSalmon
Notus -> AddNoteCommand: execute()

activate AddNoteCommand #DarkSalmon
AddNoteCommand -> Parser: inputContent()
activate Parser #DarkSalmon
return
deactivate Parser
AddNoteCommand -> TagManager: rebindTags()
activate TagManager #DarkSalmon
return
deactivate TagManager

AddNoteCommand -> Notebook: addNote()
activate Notebook #DarkSalmon
return
deactivate Notebook

AddNoteCommand -> StorageManager: saveNote()
activate StorageManager #DarkSalmon
return
deactivate StorageManager

AddNoteCommand -> Formatter: formatNote()
activate Formatter #DarkSalmon
return
deactivate Formatter

AddNoteCommand --> Notus
deactivate AddNoteCommand

deactivate Notus

@enduml